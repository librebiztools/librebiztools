name: Playwright Tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17.2-bookworm
        env:
          POSTGRES_USER: tickflo
          POSTGRES_PASSWORD: password
          POSTGRES_DB: tickflo
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U tickflo -d tickflo"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v4
      with:
        version: latest
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Build app
      run: pnpm build
    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps chromium
    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432 -U tickflo; do
          echo "Waiting for PostgreSQL to be ready..."
          sleep 2
        done
    - name: Copy default environment file
      run: cp .env.example .env
    - name: Apply db migrations
      run: pnpm db:migrate
    - name: List files in app
      run: ls -Ra app
    - name: Run Playwright tests
      run: pnpm e2e
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
